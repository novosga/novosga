# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: '%env(LANGUAGE)%'
    version: '2.1.4'
    title: 'Novo SGA CE'
    mercure_url: '%env(MERCURE_CONSUMER_URL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $rootDir: '%kernel.project_dir%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']
        
    App\Listener\SessionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 6 }
        
    App\Listener\AccessListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 7 }

    App\Listener\CorsListener:
        tags:
            - { name: kernel.event_listener, event: kernel.request, priority: 700 }

    App\Listener\JsonExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, priority: 1000 }

    App\Listener\ORM\DoctrineListener:
        tags:
            - { name: doctrine.event_subscriber }

    App\Service\TicketService:
        public: true

    App\Loader\RouterLoader:
        tags:
            - { name: routing.loader }

    App\Extensions\Doctrine\TablePrefix:
        arguments: [""]
        tags:
            - { name: doctrine.event_listener, event: loadClassMetadata, connection: default }

    App\Extensions\Doctrine\SchemaViewIgnorer:
        tags:
            - { name: doctrine.event_listener, event: postGenerateSchema, connection: default }

    
    Doctrine\Persistence\ObjectManager: '@Doctrine\ORM\EntityManagerInterface'
    
    # novosga core services
    Novosga\Service\:
        resource: '../vendor/novosga/core/Service'
        public: true
        
    Novosga\Event\EventDispatcherInterface: '@App\Service\EventDispatcher'
    
    Novosga\Infrastructure\StorageInterface:
        factory: ['App\Infrastructure\StorageFactory', 'createStorage']
        arguments: ['@Doctrine\Persistence\ObjectManager']

    Novosga\Service\Configuration:
        $rootDir: '%kernel.project_dir%'
